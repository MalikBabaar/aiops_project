services:
  # -----------------------
  # RabbitMQ (Message Broker)
  # -----------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # Redis (Celery Backend)
  # -----------------------
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # MLflow Tracking Server
  # -----------------------
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    container_name: mlflow_server
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5001
      --backend-store-uri sqlite:///mlflow.db
      --artifacts-destination file:/mlflow/artifacts
      --serve-artifacts
    volumes:
      - ./mlflow_data:/mlflow
    ports:
      - "5001:5001"
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # FastAPI Backend
  # -----------------------
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    command: uvicorn app:app --host 0.0.0.0 --port 5000 --reload
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - redis
      - mlflow
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    volumes:
      - .:/app   # ✅ gives FastAPI access to malik/malik/trainer
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # Celery Worker
  # -----------------------
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    volumes:
      - .:/app   # ✅ gives Celery access to malik/malik/trainer/train.py
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # Flower Dashboard (Celery Monitoring)
  # -----------------------
  flower:
    image: mher/flower
    container_name: flower
    command: >
      celery --broker=amqp://guest:guest@rabbitmq:5672// flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - celery_worker
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # Streamlit Dashboard
  # -----------------------
  streamlit:
    build:
      context: ./Dashboard
      dockerfile: Dockerfile
    container_name: streamlit_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - backend
      - mlflow
    environment:
      - BACKEND_URL=http://backend:5000
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    networks:
      - aiops_net
    restart: always

  # -----------------------
  # Trainer API (train.py / api.py)
  # -----------------------
  trainer:
    build:
      context: ./malik/malik/trainer
      dockerfile: Dockerfile
    container_name: trainer_api
    command: uvicorn malik.malik.trainer.api:app --host 0.0.0.0 --port 9000
    ports:
      - "9000:9000"
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    volumes:
      - ./malik:/app/malik
    networks:
      - aiops_net
    restart: always

# -----------------------
# Network Configuration
# -----------------------
networks:
  aiops_net:
    driver: bridge
